plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootPluginVersion}"
    id 'io.spring.dependency-management' version "${springDepManPluginVersion}"
    id 'org.springframework.cloud.contract' version "${springCloudContractPluginVersion}"
    id 'maven-publish'
}

group = 'io.github.concordile.demo'
version = '0.1.0-RC1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('contractTest') {
    useJUnitPlatform()
}

contracts {
    def pkg = 'io.github.concordile.demo.springproducer'
    basePackageForTests = pkg
    baseClassMappings {
        baseClassMapping('spring-consumer.rest', "${pkg}.springconsumer.SpringConsumerRestContractTest")
    }
}

publishing {
    publications {
        stubs(MavenPublication) {
            artifact verifierStubsJar
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            def mavenUrl = project.findProject('github.pkg.maven.url') ?: System.getenv('GITHUB_MAVEN_URL')
            url = "${mavenUrl}/concordile/demo-spring-producer"
            credentials {
                username = project.findProperty('github.username') ?: System.getenv('GITHUB_ACTOR')
                password = project.findProperty('github.token') ?: System.getenv('GITHUB_TOKEN')
            }
        }
    }
}
